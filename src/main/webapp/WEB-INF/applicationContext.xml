<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:orchestra="http://myfaces.apache.org/orchestra"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	                    http://myfaces.apache.org/orchestra http://myfaces.apache.org/orchestra/orchestra.xsd">
	
	
	<bean id="initialData" class="com.pferrot.lendity.initialdata.InitialData">
		<property name="userDao" ref="security.userDao"/>
		<property name="roleDao" ref="security.roleDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="itemDao" ref="itemDao"/>
		<property name="passwordEncoder" ref="security.passwordEncoder"/>
	</bean>
	
	<bean id="configuration" class="com.pferrot.lendity.configuration.Configuration" lazy-init="false">
		<property name="siteName">
			<value>lendity.com</value>
		</property>		
		<property name="rootURL">
			<value>http://localhost:8080/lendity</value>
		</property>
		<property name="noReplyEmailAddress">
			<value>no_reply@lendity.com</value>
		</property>
		<property name="noReplySenderName">
			<value>lendity.com</value>
		</property>
		<property name="supportEmailAddress">
			<value>support@lendity.com</value>
		</property>
		<property name="nbDaysToValidateRegistration">
			<value>30</value>
		</property>
	</bean>
	 
	<!--
	<bean id="dataSource" name="core.dataSource,security.dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>org.apache.derby.jdbc.EmbeddedDriver</value>
		</property>
		<property name="url">
			<value>jdbc:derby:c:\dev\_db\gollum;create=false</value>
		</property>
		<property name="username">
			<value></value>
		</property>
		<property name="password">
			<value></value>
		</property>
	</bean>
	-->
	<bean id="dataSource" name="core.dataSource,security.dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost:3306/lendity?characterEncoding=UTF-8</value>
		</property>
		<property name="username">
			<value>pferrot</value>
		</property>
		<property name="password">
			<value>klop</value>
		</property>
	</bean>	
	 
	<bean id="transactionManager" name="security.transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="auditEventListener" class="org.hibernate.envers.event.AuditEventListener" />

	<bean id="sessionFactory" name="security.sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>		
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="post-insert">
					<ref local="auditEventListener" />
				</entry>
				<entry key="post-update">
					<ref local="auditEventListener" />
				</entry>
				<entry key="post-delete">
					<ref local="auditEventListener" />
				</entry>
				<entry key="pre-collection-update">
					<ref local="auditEventListener" />
				</entry>
				<entry key="pre-collection-remove">
					<ref local="auditEventListener" />
				</entry>
				<entry key="post-collection-recreate">
					<ref local="auditEventListener" />
				</entry>																				
			</map>
		</property>
	</bean>
	
	<bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="listValueDaoTarget" class="com.pferrot.lendity.dao.hibernate.ListValueDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="listValueDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="listValueDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.ListValueDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="baseTransactionProxy"	class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<!-- 
	========================================================================================================================
	REGISTRATION - start
	 -->
	
	<bean id="registrationService" parent="baseTransactionProxy">
		<property name="target" ref="registrationServiceTarget" />
	</bean>
		
	<bean id="registrationServiceTarget" class="com.pferrot.lendity.registration.RegistrationService">
		<property name="userDao" ref="security.userDao"/>
		<property name="roleDao" ref="security.roleDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="passwordEncoder" ref="security.passwordEncoder"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
	</bean>
	
	<bean id="registrationStep1" class="com.pferrot.lendity.registration.jsf.RegistrationStep1"
	      scope="request">
		<property name="registrationController" ref="registrationController"/>
		<property name="registrationService" ref="registrationService"/>
	</bean>
	
	<bean id="registrationStep2" class="com.pferrot.lendity.registration.jsf.RegistrationStep2"
	      scope="request">
		<property name="registrationController" ref="registrationController"/>
		<property name="registrationService" ref="registrationService"/>
	</bean>
	
	<bean id="registrationStep3" class="com.pferrot.lendity.registration.jsf.RegistrationStep3"
	      scope="request">
		<property name="registrationController" ref="registrationController"/>
		<property name="registrationService" ref="registrationService"/>
	</bean>		
	
	<bean id="registrationController" class="com.pferrot.lendity.registration.jsf.RegistrationController"
	      scope="conversation.access" orchestra:conversationName="registration">
	      <property name="registrationService" ref="registrationService"/>
	</bean>

	<bean id="registrationValidationController" class="com.pferrot.lendity.registration.jsf.RegistrationValidationController"
	      scope="request">
	      <property name="registrationService" ref="registrationService"/>
	</bean>
	
	<!-- 
	REGISTRATION - end
	========================================================================================================================
	 -->
	 
	<!-- 
	========================================================================================================================
	LOST PASSWORD - start
	 -->
	
	<bean id="lostPasswordService" parent="baseTransactionProxy">
		<property name="target" ref="lostPasswordServiceTarget" />
	</bean>
		
	<bean id="lostPasswordServiceTarget" class="com.pferrot.lendity.lostpassword.LostPasswordService">
		<property name="userDao" ref="security.userDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
	</bean>

	<bean id="lostPasswordStep1" class="com.pferrot.lendity.lostpassword.jsf.LostPasswordStep1"
	      scope="request">
		<property name="lostPasswordController" ref="lostPasswordController"/>
		<property name="lostPasswordService" ref="lostPasswordService"/>
	</bean>
	
	<bean id="lostPasswordStep2" class="com.pferrot.lendity.lostpassword.jsf.LostPasswordStep2"
	      scope="request">
	</bean>	
	
	<bean id="lostPasswordController" class="com.pferrot.lendity.lostpassword.jsf.LostPasswordController"
	      scope="conversation.access" orchestra:conversationName="lostpassword">
	      <property name="lostPasswordService" ref="lostPasswordService"/>
	</bean>

	<!-- 
	LOST PASSWORD - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	CHANGE PASSWORD - start
	 -->
	
	<bean id="changePasswordService" parent="baseTransactionProxy">
		<property name="target" ref="changePasswordServiceTarget" />
	</bean>
		
	<bean id="changePasswordServiceTarget" class="com.pferrot.lendity.changepassword.ChangePasswordService">
		<property name="userDao" ref="security.userDao"/>
		<property name="personDao" ref="personDao"/>
	</bean>
	
	<bean id="changePasswordController" class="com.pferrot.lendity.changepassword.jsf.ChangePasswordController"
	      scope="conversation.access" orchestra:conversationName="changePassword">
	      <property name="changePasswordService" ref="changePasswordService"/>
	</bean>

	<!-- 
	LOST PASSWORD - end
	========================================================================================================================
	 -->
	 
	<!-- 
	========================================================================================================================
	PERSON - start
	 -->
	 
	<bean id="personDaoTarget" class="com.pferrot.lendity.dao.hibernate.PersonDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="personDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="personDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.PersonDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="personService" parent="baseTransactionProxy">
		<property name="target" ref="personServiceTarget" />
	</bean>
	
	<bean id="personServiceTarget" class="com.pferrot.lendity.person.PersonService">
		<property name="personDao" ref="personDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
	</bean>
	
	<bean id="personsListController" class="com.pferrot.lendity.person.jsf.PersonsListController"
	      scope="conversation.access">
	      <property name="personService" ref="personService"/>
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>

	<bean id="myConnectionsListController" class="com.pferrot.lendity.person.jsf.MyConnectionsListController"
	      scope="session">
	      <property name="personService" ref="personService"/>
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>

	<bean id="myBannedPersonsListController" class="com.pferrot.lendity.person.jsf.MyBannedPersonsListController"
	      scope="session">
	      <property name="personService" ref="personService"/>
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>
	
	<bean id="personOverviewController" class="com.pferrot.lendity.person.jsf.PersonOverviewController"
	      scope="conversation.access">
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="personEditController" class="com.pferrot.lendity.person.jsf.PersonEditController"
	      scope="conversation.access">
	      <property name="personService" ref="personService"/>
	</bean>
	
	<!-- 
	PERSON - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	LEND REQUEST - start
	 -->
	 
	<bean id="lendRequestDaoTarget" class="com.pferrot.lendity.dao.hibernate.LendRequestDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="lendRequestDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="lendRequestDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.LendRequestDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="lendRequestService" parent="baseTransactionProxy">
		<property name="target" ref="lendRequestServiceTarget" />
	</bean>
	
	<bean id="lendRequestServiceTarget" class="com.pferrot.lendity.lendrequest.LendRequestService">
		<property name="lendRequestDao" ref="lendRequestDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
	</bean>

    <bean id="myPendingLendRequestsListController" class="com.pferrot.lendity.lendrequest.jsf.MyPendingLendRequestsListController"
	      scope="conversation.access">
	      <property name="lendRequestService" ref="lendRequestService"/>
	</bean>
	
	<!-- 
	LEND REQUEST - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	CONNECTION REQUEST - start
	 -->
	 
	<bean id="connectionRequestDaoTarget" class="com.pferrot.lendity.dao.hibernate.ConnectionRequestDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="connectionRequestDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="connectionRequestDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.ConnectionRequestDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="connectionRequestService" parent="baseTransactionProxy">
		<property name="target" ref="connectionRequestServiceTarget" />
	</bean>
	
	<bean id="connectionRequestServiceTarget" class="com.pferrot.lendity.connectionrequest.ConnectionRequestService">
		<property name="connectionRequestDao" ref="connectionRequestDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
	</bean>

	<bean id="myPendingConnectionRequestsListController" class="com.pferrot.lendity.connectionrequest.jsf.MyPendingConnectionRequestsListController"
	      scope="conversation.access">
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>

	<!-- 
	CONNECTION REQUEST - end
	========================================================================================================================
	 -->
	 	 
	<!-- 
	========================================================================================================================
	ITEM - start
	 --> 
	 
	<bean id="itemDaoTarget" class="com.pferrot.lendity.dao.hibernate.ItemDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="itemDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="itemDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.ItemDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>	
		
	<bean id="itemService" parent="baseTransactionProxy">
		<property name="target" ref="itemServiceTarget" />
	</bean>
		
	<bean id="itemServiceTarget" class="com.pferrot.lendity.item.ItemService">
		<property name="itemDao" ref="itemDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
	</bean>
	
	<bean id="itemOverviewController" class="com.pferrot.lendity.item.jsf.InternalItemOverviewController"
	      scope="conversation.access">
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="itemAddController" class="com.pferrot.lendity.item.jsf.InternalItemAddController"
	      scope="conversation.access">
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="itemEditController" class="com.pferrot.lendity.item.jsf.InternalItemEditController"
	      scope="conversation.access">
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="itemsListController" class="com.pferrot.lendity.item.jsf.ItemsListController"
	      scope="session">
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="myItemsListController" class="com.pferrot.lendity.item.jsf.MyItemsListController"
	      scope="session">
	      <property name="itemService" ref="itemService"/>
	</bean>

	<bean id="myBorrowedItemsListController" class="com.pferrot.lendity.item.jsf.MyBorrowedItemsListController"
	      scope="session">
	      <property name="itemService" ref="itemService"/>
	</bean>

	<bean id="myConnectionsItemsListController" class="com.pferrot.lendity.item.jsf.MyConnectionsItemsListController"
	      scope="conversation.access">
	      <property name="itemService" ref="itemService"/>
	      <property name="lendRequestService" ref="lendRequestService"/>
	</bean>

	<bean id="internalItemLendTooltipController" class="com.pferrot.lendity.item.jsf.InternalItemLendTooltipController"
	      scope="request">
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="internalItemLendBackTooltipController" class="com.pferrot.lendity.item.jsf.InternalItemLendBackTooltipController"
	      scope="request">
	      <property name="itemService" ref="itemService"/>
	</bean>

	<!-- 
	ITEM - end
	========================================================================================================================
	 -->

	<!-- 
	Listener to store the current person ID in the session, so it avoids to always query the DB to retrieve it.
	 -->
<!--	<bean id="currentPersonListenerTarget" class="com.pferrot.lendity.person.listener.CurrentPersonLoginListener">-->
<!--    	<property name="personDao" ref="personDao"/>-->
<!--	</bean>	-->
<!--	<bean id="currentPersonListener" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">-->
<!--		<property name="transactionManager" ref="transactionManager"/>-->
<!--		<property name="target">-->
<!--			<ref local="currentPersonListenerTarget"/>-->
<!--		</property>-->
<!--		<property name="transactionAttributes">-->
<!--			<props>-->
<!--				<prop key="onApplicationEvent">PROPAGATION_REQUIRED</prop>-->
<!--				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>-->
<!--			</props>-->
<!--		</property>-->
<!--	</bean>-->
	
	<!-- 
	Orchestra stuff...
	 -->
	<import resource="classpath*:/META-INF/spring-orchestra-init.xml"/>
	
    <!-- register our custom spring scope -->
	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<property name="scopes">
			<map>
				<entry key="conversation.manual">
					<bean class="org.apache.myfaces.orchestra.conversation.spring.SpringConversationScope">
						<property name="timeout" value="30" />
						<property name="advices">
							<list>
								<ref bean="persistentContextConversationInterceptor" />
							</list>
						</property>
						<property name="lifetime" value="manual" />
					</bean>
				</entry>			
				<entry key="conversation.access">
					<bean class="org.apache.myfaces.orchestra.conversation.spring.SpringConversationScope">
						<property name="timeout" value="30" />
						<property name="advices">
							<list>
								<ref bean="persistentContextConversationInterceptor" />
							</list>
						</property>
						<property name="lifetime" value="access" />
					</bean>
				</entry>
				<entry key="conversation.viewController">
					<bean class="org.apache.myfaces.orchestra.viewController.spring.SpringViewControllerScope">
						<property name="advices">
							<list>
								<ref bean="persistentContextConversationInterceptor" />
							</list>
						</property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>	
    
	<bean id="persistentContextConversationInterceptor" class="org.apache.myfaces.orchestra.conversation.spring.PersistenceContextConversationInterceptor">
		<property name="persistenceContextFactory" ref="persistentContextFactory" />
	</bean>    
    
    <!-- 
    <tx:annotation-driven/>
     -->
     
    <bean id="persistentContextFactory" class="com.pferrot.orchestra.hibernate.HibernatePersistenceContextFactory">
		<property name="entityManagerFactory" ref="sessionFactory"/>
    </bean>
    
<!--	<bean id="managedDataSource" class="org.apache.myfaces.orchestra.connectionManager.ConnectionManagerDataSource">-->
<!--    	<property name="dataSource" ref="dataSource"/>-->
<!--    </bean>    -->

	 
	
</beans>