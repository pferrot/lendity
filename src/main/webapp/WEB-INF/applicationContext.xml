<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:orchestra="http://myfaces.apache.org/orchestra"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	                    http://myfaces.apache.org/orchestra http://myfaces.apache.org/orchestra/orchestra.xsd">
	
	
	<bean id="initialData" class="com.pferrot.sharedcalendar.initialdata.InitialData">
		<property name="userDao" ref="security.userDao"/>
		<property name="roleDao" ref="security.roleDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="movieDao" ref="movieDao"/>
		<property name="passwordEncoder" ref="security.passwordEncoder"/>
	</bean>
	
	<!--
	<bean id="dataSource" name="core.dataSource,security.dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>org.apache.derby.jdbc.EmbeddedDriver</value>
		</property>
		<property name="url">
			<value>jdbc:derby:c:\dev\_db\gollum;create=false</value>
		</property>
		<property name="username">
			<value></value>
		</property>
		<property name="password">
			<value></value>
		</property>
	</bean>
	-->
	<bean id="dataSource" name="core.dataSource,security.dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost:3306/sharedcalendar</value>
		</property>
		<property name="username">
			<value>pferrot</value>
		</property>
		<property name="password">
			<value>klop</value>
		</property>
	</bean>
	
	 
	<bean id="transactionManager" name="security.transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="sessionFactory" name="security.sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>		
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property>
	</bean>
	
	<bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="listValueDaoTarget" class="com.pferrot.sharedcalendar.dao.hibernate.ListValueDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="listValueDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="listValueDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.sharedcalendar.dao.ListValueDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="personDaoTarget" class="com.pferrot.sharedcalendar.dao.hibernate.PersonDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="personDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="personDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.sharedcalendar.dao.PersonDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="baseTransactionProxy"	class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<!-- 
	========================================================================================================================
	REGISTRATION - start
	 -->
	
	<bean id="registrationService" parent="baseTransactionProxy">
		<property name="target" ref="registrationServiceTarget" />
	</bean>
		
	<bean id="registrationServiceTarget" class="com.pferrot.sharedcalendar.registration.RegistrationService">
		<property name="userDao" ref="security.userDao"/>
		<property name="roleDao" ref="security.roleDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="passwordEncoder" ref="security.passwordEncoder"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
	</bean>
	
	<bean id="registrationStep1" class="com.pferrot.sharedcalendar.registration.jsf.RegistrationStep1"
	      scope="request">
		<property name="registrationController" ref="registrationController"/>
		<property name="registrationService" ref="registrationService"/>
	</bean>
	
	<bean id="registrationStep2" class="com.pferrot.sharedcalendar.registration.jsf.RegistrationStep2"
	      scope="request">
		<property name="registrationController" ref="registrationController"/>
		<property name="registrationService" ref="registrationService"/>
	</bean>
	
	<bean id="registrationStep3" class="com.pferrot.sharedcalendar.registration.jsf.RegistrationStep3"
	      scope="request">
		<property name="registrationController" ref="registrationController"/>
		<property name="registrationService" ref="registrationService"/>
	</bean>		
	
	<bean id="registrationController" class="com.pferrot.sharedcalendar.registration.jsf.RegistrationController"
	      scope="conversation.access" orchestra:conversationName="registration">
	      <property name="registrationService" ref="registrationService"/>
	</bean>
	
	<!-- 
	REGISTRATION - end
	========================================================================================================================
	 -->
	 
	<!-- 
	========================================================================================================================
	MOVIE - start
	 -->
	 
	<bean id="movieDaoTarget" class="com.pferrot.sharedcalendar.dao.hibernate.MovieDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="movieDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="movieDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.sharedcalendar.dao.MovieDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>	
		
	<bean id="movieService" parent="baseTransactionProxy">
		<property name="target" ref="movieServiceTarget" />
	</bean>
		
	<bean id="movieServiceTarget" class="com.pferrot.sharedcalendar.movie.MovieService">
		<property name="movieDao" ref="movieDao"/>
		<property name="listValueDao" ref="listValueDao"/>
	</bean>
	
	<bean id="movieOverviewStep1" 
	      class="com.pferrot.sharedcalendar.movie.jsf.MovieOverviewStep1"
	      scope="request">
		<property name="movieOverviewViewController" ref="movieOverviewViewController"/>

	</bean>	
	
	<bean id="movieOverviewViewController" class="com.pferrot.sharedcalendar.movie.jsf.MovieOverviewViewController"
	      scope="conversation.access" orchestra:conversationName="movieOverview">
	      <property name="movieService" ref="movieService"/>
	</bean>
	
	<bean id="movieCreateStep1" 
	      class="com.pferrot.sharedcalendar.movie.jsf.MovieCreateStep1"
	      scope="request">
		<property name="movieCreateViewController" ref="movieCreateViewController"/>
	</bean>	
	
	<bean id="movieCreateViewController" class="com.pferrot.sharedcalendar.movie.jsf.MovieCreateViewController"
	      scope="conversation.access" orchestra:conversationName="movieCreate">
	      <property name="movieService" ref="movieService"/>
	</bean>
	
	<bean id="moviesListController" class="com.pferrot.sharedcalendar.movie.jsf.MoviesListController"
	      scope="conversation.access" orchestra:conversationName="moviesList">
	      <property name="movieService" ref="movieService"/>
	</bean>
	
	<bean id="myMoviesListController" class="com.pferrot.sharedcalendar.movie.jsf.MyMoviesListController"
	      scope="conversation.access" orchestra:conversationName="myMoviesList">
	      <property name="movieService" ref="movieService"/>
	</bean>	
	
	<!-- 
	MOVIE - end
	========================================================================================================================
	 -->		 	
	
	<!-- 
	Orchestra stuff...
	 -->
	<import resource="classpath*:/META-INF/spring-orchestra-init.xml"/>
	
    <!-- register our custom spring scope -->
	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<property name="scopes">
			<map>
				<entry key="conversation.manual">
					<bean class="org.apache.myfaces.orchestra.conversation.spring.SpringConversationScope">
						<property name="timeout" value="30" />
						<property name="advices">
							<list>
								<ref bean="persistentContextConversationInterceptor" />
							</list>
						</property>
						<property name="lifetime" value="manual" />
					</bean>
				</entry>			
				<entry key="conversation.access">
					<bean class="org.apache.myfaces.orchestra.conversation.spring.SpringConversationScope">
						<property name="timeout" value="30" />
						<property name="advices">
							<list>
								<ref bean="persistentContextConversationInterceptor" />
							</list>
						</property>
						<property name="lifetime" value="access" />
					</bean>
				</entry>
				<entry key="conversation.viewController">
					<bean class="org.apache.myfaces.orchestra.viewController.spring.SpringViewControllerScope">
						<property name="advices">
							<list>
								<ref bean="persistentContextConversationInterceptor" />
							</list>
						</property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>	
    
	<bean id="persistentContextConversationInterceptor" class="org.apache.myfaces.orchestra.conversation.spring.PersistenceContextConversationInterceptor">
		<property name="persistenceContextFactory" ref="persistentContextFactory" />
	</bean>    
    
    <!-- 
    <tx:annotation-driven/>
     -->
     
    <bean id="persistentContextFactory" class="com.pferrot.orchestra.hibernate.HibernatePersistenceContextFactory">
		<property name="entityManagerFactory" ref="sessionFactory"/>
    </bean>
    
<!--	<bean id="managedDataSource" class="org.apache.myfaces.orchestra.connectionManager.ConnectionManagerDataSource">-->
<!--    	<property name="dataSource" ref="dataSource"/>-->
<!--    </bean>    -->

	 
	
</beans>