<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:orchestra="http://myfaces.apache.org/orchestra"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	                    http://myfaces.apache.org/orchestra http://myfaces.apache.org/orchestra/orchestra.xsd">
	
	<!--
	<bean id="initialData" class="com.pferrot.lendity.initialdata.InitialData">
		<property name="userDao" ref="security.userDao"/>
		<property name="roleDao" ref="security.roleDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="groupDao" ref="groupDao"/>
		<property name="groupService" ref="groupService"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="itemDao" ref="itemDao"/>
		<property name="needDao" ref="needDao"/>
		<property name="passwordEncoder" ref="security.passwordEncoder"/>
	</bean>
     -->
 
	<!-- json -->
	<bean id="xmlFileViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="location">
			<value>/WEB-INF/views.xml</value>
		</property>
		<property name="order">
			<value>1</value>
		</property>
	</bean>

    
	<bean id="configuration" class="com.pferrot.lendity.configuration.Configuration" lazy-init="false">
		<property name="siteName">
			<value>Lendity</value>
		</property>		
		<property name="rootURL">
			<value>http://www.lendity.ch</value>
<!--			<value>http://localhost:8080/lendity</value>-->
<!--			<value>http://golgoth14.dyndns.org:8080/lendity</value>-->
		</property>
		<property name="noReplyEmailAddress">
			<value>no_reply@lendity.ch</value>
		</property>
		<property name="noReplySenderName">
			<value>Lendity</value>
		</property>
		<property name="contactEmailAddress">
			<value>contact@lendity.ch</value>
		</property>
		<property name="supportEmailAddress">
			<value>support@lendity.ch</value>
		</property>
		<property name="nbDaysToValidateRegistration">
			<value>30</value>
		</property>
		<property name="minimumAge">
			<value>18</value>
		</property>
		<property name="facebookLikeEnabled">
			<value>true</value>
		</property>
		<property name="categoriesNotAllowedPublicVisibility">
			<set>
				<value>item_categoryCd</value>
				<value>item_categoryDvd</value>
				<value>item_categoryBluRay</value>
				<value>item_categoryVideoGameOther</value>
				<value>item_categoryVideoGamePS3</value>
				<value>item_categoryVideoGamePC</value>
				<value>item_categoryVideoGameXbox360</value>
				<value>item_categoryVideoGameWii</value>
			</set>		
		</property>
		<property name="categoriesNotAllowedToRent">
			<set>
				<value>item_categoryCd</value>
				<value>item_categoryDvd</value>
				<value>item_categoryBluRay</value>
				<value>item_categoryVideoGameOther</value>
				<value>item_categoryVideoGamePS3</value>
				<value>item_categoryVideoGamePC</value>
				<value>item_categoryVideoGameXbox360</value>
				<value>item_categoryVideoGameWii</value>
			</set>
		</property>
	</bean>

	<bean id="hibernateUtils" class="com.pferrot.lendity.dao.hibernate.utils.HibernateUtils" lazy-init="false">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	 
	<!--
	<bean id="dataSource" name="core.dataSource,security.dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>org.apache.derby.jdbc.EmbeddedDriver</value>
		</property>
		<property name="url">
			<value>jdbc:derby:c:\dev\_db\gollum;create=false</value>
		</property>
		<property name="username">
			<value></value>
		</property>
		<property name="password">
			<value></value>
		</property>
	</bean>
	-->
	<bean id="dataSource" name="core.dataSource,security.dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost:3306/lendity?characterEncoding=UTF-8</value>
		</property>
		<property name="username">
			<value>pferrot</value>
		</property>
		<property name="password">
			<value>klop</value>
		</property>
	</bean>	
	 
	<bean id="transactionManager" name="security.transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="auditEventListener" class="org.hibernate.envers.event.AuditEventListener" />

	<bean id="sessionFactory" name="security.sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>		
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="post-insert">
					<ref local="auditEventListener" />
				</entry>
				<entry key="post-update">
					<ref local="auditEventListener" />
				</entry>
				<entry key="post-delete">
					<ref local="auditEventListener" />
				</entry>
				<entry key="pre-collection-update">
					<ref local="auditEventListener" />
				</entry>
				<entry key="pre-collection-remove">
					<ref local="auditEventListener" />
				</entry>
				<entry key="post-collection-recreate">
					<ref local="auditEventListener" />
				</entry>																				
			</map>
		</property>
	</bean>
	
	<bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="listValueDaoTarget" class="com.pferrot.lendity.dao.hibernate.ListValueDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="listValueDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="listValueDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.ListValueDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="baseTransactionProxy"	class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<!-- 
	========================================================================================================================
	IP TO COUNTRY - start
	 -->
	
	<bean id="ipToCountryService" parent="baseTransactionProxy">
		<property name="target" ref="ipToCountryServiceTarget" />
	</bean>
		
	<bean id="ipToCountryServiceTarget" class="com.pferrot.lendity.iptocountry.IpToCountryService">
		<property name="ipToCountryDao" ref="ipToCountryDao"/>
	</bean>
	
	<bean id="ipToCountryDaoTarget" class="com.pferrot.lendity.dao.hibernate.IpToCountryDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>

	<bean id="ipToCountryDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="ipToCountryDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.IpToCountryDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<!-- 
	IP TO COUNTRY - end
	========================================================================================================================
	 -->
	 
	<!-- 
	========================================================================================================================
	REGISTRATION - start
	 -->
	
	<bean id="registrationService" parent="baseTransactionProxy">
		<property name="target" ref="registrationServiceTarget" />
	</bean>
		
	<bean id="registrationServiceTarget" class="com.pferrot.lendity.registration.RegistrationService">
		<property name="userDao" ref="security.userDao"/>
		<property name="roleDao" ref="security.roleDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
	</bean>
	
	<bean id="registrationStep1" class="com.pferrot.lendity.registration.jsf.RegistrationStep1"
	      scope="request">
		<property name="registrationController" ref="registrationController"/>
		<property name="registrationService" ref="registrationService"/>
		<property name="personService" ref="personService"/>
		<property name="ipToCountryService" ref="ipToCountryService"/>		
	</bean>
	
	<bean id="registrationStep2" class="com.pferrot.lendity.registration.jsf.RegistrationStep2"
	      scope="request">
		<property name="registrationController" ref="registrationController"/>
		<property name="registrationService" ref="registrationService"/>
	</bean>
	
	<bean id="registrationStep3" class="com.pferrot.lendity.registration.jsf.RegistrationStep3"
	      scope="request">
		<property name="registrationController" ref="registrationController"/>
		<property name="registrationService" ref="registrationService"/>
	</bean>		
	
	<bean id="registrationController" class="com.pferrot.lendity.registration.jsf.RegistrationController"
	      scope="conversation.access" orchestra:conversationName="registration">
	      <property name="registrationService" ref="registrationService"/>
	      <property name="passwordEncoder" ref="security.passwordEncoder"/>
	</bean>

	<bean id="registrationValidationController" class="com.pferrot.lendity.registration.jsf.RegistrationValidationController"
	      scope="request">
	      <property name="registrationService" ref="registrationService"/>
	</bean>
	
	<!-- 
	REGISTRATION - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	INVITATION - start
	 -->
	
	<bean id="invitationService" parent="baseTransactionProxy">
		<property name="target" ref="invitationServiceTarget" />
	</bean>
		
	<bean id="invitationServiceTarget" class="com.pferrot.lendity.invitation.InvitationService">
		<property name="personService" ref="personService"/>
		<property name="registrationService" ref="registrationService"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
	</bean>

	<bean id="invitationController" class="com.pferrot.lendity.invitation.jsf.InviteFriendsController"
	      scope="conversation.access" orchestra:conversationName="invitation">
	      <property name="registrationService" ref="registrationService"/>
	      <property name="invitationService" ref="invitationService"/>
	</bean>
	
	<!-- 
	INVITATION - end
	========================================================================================================================
	 -->
	 
	<!-- 
	========================================================================================================================
	LOST PASSWORD - start
	 -->
	
	<bean id="lostPasswordService" parent="baseTransactionProxy">
		<property name="target" ref="lostPasswordServiceTarget" />
	</bean>
		
	<bean id="lostPasswordServiceTarget" class="com.pferrot.lendity.lostpassword.LostPasswordService">
		<property name="userDao" ref="security.userDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
		<property name="passwordEncoder" ref="security.passwordEncoder"/>
	</bean>

	<bean id="lostPasswordStep1" class="com.pferrot.lendity.lostpassword.jsf.LostPasswordStep1"
	      scope="request">
		<property name="lostPasswordController" ref="lostPasswordController"/>
		<property name="lostPasswordService" ref="lostPasswordService"/>
	</bean>
	
	<bean id="lostPasswordStep2" class="com.pferrot.lendity.lostpassword.jsf.LostPasswordStep2"
	      scope="request">
	</bean>	
	
	<bean id="lostPasswordController" class="com.pferrot.lendity.lostpassword.jsf.LostPasswordController"
	      scope="conversation.access" orchestra:conversationName="lostpassword">
	      <property name="lostPasswordService" ref="lostPasswordService"/>
	</bean>
	
	<bean id="resetPasswordController" class="com.pferrot.lendity.lostpassword.jsf.ResetPasswordController"
	      scope="request">
	      <property name="lostPasswordService" ref="lostPasswordService"/>
	</bean>

	<!-- 
	LOST PASSWORD - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	CHANGE PASSWORD - start
	 -->
	
	<bean id="changePasswordService" parent="baseTransactionProxy">
		<property name="target" ref="changePasswordServiceTarget" />
	</bean>
		
	<bean id="changePasswordServiceTarget" class="com.pferrot.lendity.changepassword.ChangePasswordService">
		<property name="userDao" ref="security.userDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="passwordEncoder" ref="security.passwordEncoder"/>
	</bean>
	
	<bean id="changePasswordController" class="com.pferrot.lendity.changepassword.jsf.ChangePasswordController"
	      scope="conversation.access" orchestra:conversationName="changePassword">
	      <property name="changePasswordService" ref="changePasswordService"/>
	      <property name="passwordEncoder" ref="security.passwordEncoder"/>
	</bean>

	<!-- 
	LOST PASSWORD - end
	========================================================================================================================
	 -->
	 
	<!-- 
	========================================================================================================================
	HOME PUBLIC - start
	 -->
	 
	<bean id="homePublicController" class="com.pferrot.lendity.login.jsf.HomePublicController"
	      scope="conversation.access">
		<property name="itemService" ref="itemService"/>
		<property name="needService" ref="needService"/>
		<property name="personService" ref="personService"/>
		<property name="groupService" ref="groupService"/>
	</bean>

	<!-- 
	HOME PUBLIC - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	HOME - start
	 -->
	 
	<bean id="homeController" class="com.pferrot.lendity.home.jsf.HomeController"
	      scope="conversation.access">
	      <property name="itemService" ref="itemService"/>
	      <property name="needService" ref="needService"/>
	      <property name="personService" ref="personService"/>
	      <property name="groupService" ref="groupService"/>
	      <property name="groupJoinRequestService" ref="groupJoinRequestService"/>
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>

	<!-- 
	HOME - end
	========================================================================================================================
	 -->
	 	 
	<!-- 
	========================================================================================================================
	PERSON - start
	 -->
	 
	<bean id="personDaoTarget" class="com.pferrot.lendity.dao.hibernate.PersonDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="personDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="personDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.PersonDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="personService" parent="baseTransactionProxy">
		<property name="target" ref="personServiceTarget" />
	</bean>
	
	<bean id="personServiceTarget" class="com.pferrot.lendity.person.PersonService">
		<property name="personDao" ref="personDao"/>
		<property name="documentDao" ref="documentDao"/>
		<property name="documentService" ref="documentService"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
		<property name="listValueDao" ref="listValueDao"/>
	</bean>
	
	<bean id="personsListController" class="com.pferrot.lendity.person.jsf.PersonsListController"
	      scope="session">
	      <property name="personService" ref="personService"/>
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>

	<bean id="myConnectionsListController" class="com.pferrot.lendity.person.jsf.MyConnectionsListController"
	      scope="session">
	      <property name="personService" ref="personService"/>
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>

	<bean id="myBannedPersonsListController" class="com.pferrot.lendity.person.jsf.MyBannedPersonsListController"
	      scope="session">
	      <property name="personService" ref="personService"/>
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>
	
	
	<bean id="myProfileController" class="com.pferrot.lendity.person.jsf.MyProfileController"
	      scope="conversation.access">
	      <property name="personService" ref="personService"/>
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>
	
	<bean id="personOverviewController" class="com.pferrot.lendity.person.jsf.PersonOverviewController"
	      scope="conversation.access">
	      <property name="personService" ref="personService"/>
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>
	
	<bean id="personEditController" class="com.pferrot.lendity.person.jsf.PersonEditController"
	      scope="conversation.access">
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="personEditPictureController" class="com.pferrot.lendity.person.jsf.PersonEditPictureController"
	      scope="conversation.access">
	      <property name="personService" ref="personService"/>
	      <property name="documentService" ref="documentService"/>
	</bean>
	
	<bean id="removeConnectionTooltipController" class="com.pferrot.lendity.person.jsf.RemoveConnectionTooltipController"
	      scope="request">
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="removeBannedPersonTooltipController" class="com.pferrot.lendity.person.jsf.RemoveBannedPersonTooltipController"
	      scope="request">
	      <property name="personService" ref="personService"/>
	</bean>
	
	<!-- 
	PERSON - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	LEND REQUEST - start
	 -->
	 
	<bean id="lendRequestDaoTarget" class="com.pferrot.lendity.dao.hibernate.LendRequestDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="lendRequestDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="lendRequestDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.LendRequestDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="lendRequestService" parent="baseTransactionProxy">
		<property name="target" ref="lendRequestServiceTarget" />
	</bean>
	
	<bean id="lendRequestServiceTarget" class="com.pferrot.lendity.lendrequest.LendRequestService">
		<property name="lendRequestDao" ref="lendRequestDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="itemDao" ref="itemDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
		<property name="personService" ref="personService"/>
		<property name="lendTransactionService" ref="lendTransactionService"/>
		<property name="lendTransactionWithCommentService" ref="lendTransactionWithCommentService"/>
	</bean>

    <bean id="myPendingLendRequestsListController" class="com.pferrot.lendity.lendrequest.jsf.MyPendingLendRequestsListController"
	      scope="session">
	      <property name="lendRequestService" ref="lendRequestService"/>
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="myPendingLendRequestsOutListController" class="com.pferrot.lendity.lendrequest.jsf.MyPendingLendRequestsOutListController"
	      scope="session">
	      <property name="lendRequestService" ref="lendRequestService"/>
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="requestLendTooltipController" class="com.pferrot.lendity.lendrequest.jsf.RequestLendTooltipController"
	      scope="request">
	      <property name="lendRequestService" ref="lendRequestService"/>
	</bean>

	<bean id="acceptLendTooltipController" class="com.pferrot.lendity.lendrequest.jsf.AcceptLendTooltipController"
	      scope="request">
	      <property name="lendRequestService" ref="lendRequestService"/>
	</bean>
	
	<bean id="refuseLendTooltipController" class="com.pferrot.lendity.lendrequest.jsf.RefuseLendTooltipController"
	      scope="request">
	      <property name="lendRequestService" ref="lendRequestService"/>
	</bean>
	
	<!-- 
	LEND REQUEST - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	LEND TRANSACTION - start
	 -->
	 
	<bean id="lendTransactionDaoTarget" class="com.pferrot.lendity.dao.hibernate.LendTransactionDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
		<property name="listValueDao" ref="listValueDao"/>
	</bean>
	
	<bean id="lendTransactionDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="lendTransactionDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.LendTransactionDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="lendTransactionService" parent="baseTransactionProxy">
		<property name="target" ref="lendTransactionServiceTarget" />
	</bean>
	
	<bean id="lendTransactionServiceTarget" class="com.pferrot.lendity.lendtransaction.LendTransactionService">
		<property name="lendTransactionDao" ref="lendTransactionDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
		<property name="personService" ref="personService"/>
		<property name="itemService" ref="itemService"/>
	</bean>

	<bean id="lendTransactionWithCommentService" parent="baseTransactionProxy">
		<property name="target" ref="lendTransactionWithCommentServiceTarget" />
	</bean>
	
	<bean id="lendTransactionWithCommentServiceTarget" class="com.pferrot.lendity.lendtransaction.LendTransactionWithCommentService">
		<property name="lendTransactionService" ref="lendTransactionService"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="itemService" ref="itemService"/>
		<property name="commentService" ref="commentService"/>
		<property name="lendTransactionDao" ref="lendTransactionDao"/>
	</bean>

	<bean id="lendTransactionOverviewController" class="com.pferrot.lendity.lendtransaction.jsf.LendTransactionOverviewController"
	      scope="conversation.access">
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	      <property name="lendTransactionWithCommentService" ref="lendTransactionWithCommentService"/>
	      <property name="lendRequestService" ref="lendRequestService"/>
	      <property name="evaluationService" ref="evaluationService"/>
	</bean>
	
	<bean id="transferItemTooltipController" class="com.pferrot.lendity.lendtransaction.jsf.TransferItemTooltipController"
	      scope="request">
	      <property name="lendTransactionWithCommentService" ref="lendTransactionWithCommentService"/>
	</bean>
	
	<bean id="lendTransactionEditController" class="com.pferrot.lendity.lendtransaction.jsf.LendTransactionEditController"
	      scope="conversation.access">
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	      <property name="lendTransactionWithCommentService" ref="lendTransactionWithCommentService"/>
	      <property name="lendRequestService" ref="lendRequestService"/>
	</bean>

    <bean id="myInProgressLendTransactionsListController" class="com.pferrot.lendity.lendtransaction.jsf.MyInProgressLendTransactionsListController"
	      scope="session">
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="myInProgressLendTransactionsOutListController" class="com.pferrot.lendity.lendtransaction.jsf.MyInProgressLendTransactionsOutListController"
	      scope="session">
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	      <property name="itemService" ref="itemService"/>
	</bean>

	<bean id="myLendTransactionsForItemListController" class="com.pferrot.lendity.lendtransaction.jsf.MyLendTransactionsForItemListController"
	      scope="session">
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	      <property name="itemService" ref="itemService"/>
	      <property name="personService" ref="personService"/>
	</bean>

	<bean id="myLendTransactionsListController" class="com.pferrot.lendity.lendtransaction.jsf.MyLendTransactionsListController"
	      scope="session">
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="myLendTransactionsWaitingForInputListController" class="com.pferrot.lendity.lendtransaction.jsf.MyLendTransactionsWaitingForInputListController"
	      scope="session">
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	      <property name="itemService" ref="itemService"/>
	</bean>

<!-- 	
	<bean id="transactionLendTooltipController" class="com.pferrot.lendity.lendtransaction.jsf.TransactionLendTooltipController"
	      scope="transaction">
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	</bean>
 -->
 
	<!-- 
	LEND TRANSACTION - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	GROUP - start
	-->
	
	<bean id="groupDaoTarget" class="com.pferrot.lendity.dao.hibernate.GroupDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="groupDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="groupDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.GroupDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="groupService" parent="baseTransactionProxy">
		<property name="target" ref="groupServiceTarget" />
	</bean>
	
	<bean id="groupServiceTarget" class="com.pferrot.lendity.group.GroupService">
		<property name="groupDao" ref="groupDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="personService" ref="personService"/>
		<property name="documentService" ref="documentService"/>
		<property name="documentDao" ref="documentDao"/>
	</bean>

	<bean id="groupOverviewController" class="com.pferrot.lendity.group.jsf.GroupOverviewController"
	      scope="conversation.access">
	      <property name="groupService" ref="groupService"/>
	      <property name="groupJoinRequestService" ref="groupJoinRequestService"/>
	      <property name="passwordEncoder" ref="security.passwordEncoder"/> 
	</bean>

	<bean id="deleteGroupTooltipController" class="com.pferrot.lendity.group.jsf.DeleteGroupTooltipController"
	      scope="request">
	      <property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="groupRemoveMemberTooltipController" class="com.pferrot.lendity.group.jsf.GroupRemoveMemberTooltipController"
	      scope="request">
	      <property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="groupRemoveAdminTooltipController" class="com.pferrot.lendity.group.jsf.GroupRemoveAdminTooltipController"
	      scope="request">
	      <property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="groupAddAdminTooltipController" class="com.pferrot.lendity.group.jsf.GroupAddAdminTooltipController"
	      scope="request">
	      <property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="groupBanPersonTooltipController" class="com.pferrot.lendity.group.jsf.GroupBanPersonTooltipController"
	      scope="request">
	      <property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="groupUnbanPersonTooltipController" class="com.pferrot.lendity.group.jsf.GroupUnbanPersonTooltipController"
	      scope="request">
	      <property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="groupAddController" class="com.pferrot.lendity.group.jsf.GroupAddController"
	      scope="conversation.access">
	      <property name="groupService" ref="groupService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="groupEditController" class="com.pferrot.lendity.group.jsf.GroupEditController"
	      scope="conversation.access">
	      <property name="groupService" ref="groupService"/>
	      <property name="personService" ref="personService"/>
	</bean>

	<bean id="groupEditPictureController" class="com.pferrot.lendity.group.jsf.GroupEditPictureController"
	      scope="conversation.access">
	      <property name="groupService" ref="groupService"/>
	      <property name="documentService" ref="documentService"/>
	</bean>
	
	<bean id="groupsListController" class="com.pferrot.lendity.group.jsf.GroupsListController"
	      scope="session">
	      <property name="groupService" ref="groupService"/>      
	</bean>
	
	<bean id="myGroupsListController" class="com.pferrot.lendity.group.jsf.MyGroupsListController"
	      scope="session">
	      <property name="groupService" ref="groupService"/>      
	</bean>
	
	<bean id="myGroupsWhereOwnerOrAdministratorListController" class="com.pferrot.lendity.group.jsf.MyGroupsWhereOwnerOrAdministratorListController"
	      scope="session">
	      <property name="groupService" ref="groupService"/>      
	</bean>
	
	<bean id="groupMembersListController" class="com.pferrot.lendity.group.jsf.GroupMembersListController"
	      scope="session">
	      <property name="groupService" ref="groupService"/>
	      <property name="personService" ref="personService"/>      
	</bean>
	
	<bean id="groupAdministratorsListController" class="com.pferrot.lendity.group.jsf.GroupAdministratorsListController"
	      scope="session">
	      <property name="groupService" ref="groupService"/>
	      <property name="personService" ref="personService"/>      
	</bean>
	
	<bean id="groupBannedListController" class="com.pferrot.lendity.group.jsf.GroupBannedListController"
	      scope="session">
	      <property name="groupService" ref="groupService"/>
	      <property name="personService" ref="personService"/>      
	</bean>
	

	<!-- 
	GROUP - end
	========================================================================================================================
	-->

	<!-- 
	========================================================================================================================
	GROUP JOIN REQUEST - start
	 -->
	 
	<bean id="groupJoinRequestDaoTarget" class="com.pferrot.lendity.dao.hibernate.GroupJoinRequestDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="groupJoinRequestDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="groupJoinRequestDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.GroupJoinRequestDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="groupJoinRequestService" parent="baseTransactionProxy">
		<property name="target" ref="groupJoinRequestServiceTarget" />
	</bean>
	
	<bean id="groupJoinRequestServiceTarget" class="com.pferrot.lendity.groupjoinrequest.GroupJoinRequestService">
		<property name="groupJoinRequestDao" ref="groupJoinRequestDao"/>
		<property name="groupService" ref="groupService"/>
		<property name="personService" ref="personService"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
		<property name="listValueDao" ref="listValueDao"/>
	</bean>

	<bean id="myPendingGroupJoinRequestsListController" class="com.pferrot.lendity.groupjoinrequest.jsf.MyPendingGroupJoinRequestsListController"
	      scope="session">
	      <property name="groupJoinRequestService" ref="groupJoinRequestService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="myPendingGroupJoinRequestsOutListController" class="com.pferrot.lendity.groupjoinrequest.jsf.MyPendingGroupJoinRequestsOutListController"
	      scope="session">
	      <property name="groupJoinRequestService" ref="groupJoinRequestService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
 	
	<bean id="joinGroupTooltipController" class="com.pferrot.lendity.groupjoinrequest.jsf.JoinGroupTooltipController"
	      scope="request">
	      <property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="leaveGroupTooltipController" class="com.pferrot.lendity.groupjoinrequest.jsf.LeaveGroupTooltipController"
	      scope="request">
	      <property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="requestGroupJoinTooltipController" class="com.pferrot.lendity.groupjoinrequest.jsf.RequestGroupJoinTooltipController"
	      scope="request">
	      <property name="groupJoinRequestService" ref="groupJoinRequestService"/>
	</bean>

	<bean id="acceptGroupJoinTooltipController" class="com.pferrot.lendity.groupjoinrequest.jsf.AcceptGroupJoinTooltipController"
	      scope="request">
	      <property name="groupJoinRequestService" ref="groupJoinRequestService"/>
	</bean>
	
	<bean id="refuseGroupJoinTooltipController" class="com.pferrot.lendity.groupjoinrequest.jsf.RefuseGroupJoinTooltipController"
	      scope="request">
	      <property name="groupJoinRequestService" ref="groupJoinRequestService"/>
	</bean>
	
	<bean id="banGroupJoinTooltipController" class="com.pferrot.lendity.groupjoinrequest.jsf.BanGroupJoinTooltipController"
	      scope="request">
	      <property name="groupJoinRequestService" ref="groupJoinRequestService"/>
	</bean>

 
	<!-- 
	GROUP JOIN REQUEST - end
	========================================================================================================================
	 -->
	 
	<!-- 
	========================================================================================================================
	EVALUATION - start
	-->
	<bean id="evaluationDaoTarget" class="com.pferrot.lendity.dao.hibernate.EvaluationDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="evaluationDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="evaluationDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.EvaluationDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="evaluationService" parent="baseTransactionProxy">
		<property name="target" ref="evaluationServiceTarget" />
	</bean>
	
	<bean id="evaluationServiceTarget" class="com.pferrot.lendity.evaluation.EvaluationService">
		<property name="evaluationDao" ref="evaluationDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="lendTransactionWithCommentService" ref="lendTransactionWithCommentService"/>
		<property name="lendTransactionService" ref="lendTransactionService"/>
		<property name="personService" ref="personService"/>
	</bean>	

	<bean id="evaluationAddController" class="com.pferrot.lendity.evaluation.jsf.EvaluationAddController"
	      scope="conversation.access">
	      <property name="evaluationService" ref="evaluationService"/>
	      <property name="lendTransactionService" ref="lendTransactionService"/>	 
	</bean>
	
	<bean id="evaluationOverviewController" class="com.pferrot.lendity.evaluation.jsf.EvaluationOverviewController"
	      scope="conversation.access">
	      <property name="evaluationService" ref="evaluationService"/>
	      <property name="lendTransactionService" ref="lendTransactionService"/>	 
	</bean>
	
	<bean id="myEvaluationsListController" class="com.pferrot.lendity.evaluation.jsf.MyEvaluationsListController"
	      scope="session">
	      <property name="evaluationService" ref="evaluationService"/>
	      <property name="personService" ref="personService"/>	 
	</bean>
	
	<bean id="myEvaluationsMadeListController" class="com.pferrot.lendity.evaluation.jsf.MyEvaluationsMadeListController"
	      scope="session">
	      <property name="evaluationService" ref="evaluationService"/>
	      <property name="personService" ref="personService"/>	 
	</bean>

	<!-- 
	EVALUATION - end
	========================================================================================================================
	-->	
	
	<!-- 
	========================================================================================================================
	COMMENT - start
	-->

	<bean id="commentDaoTarget" class="com.pferrot.lendity.dao.hibernate.CommentDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="commentDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="commentDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.CommentDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="commentService" parent="baseTransactionProxy">
		<property name="target" ref="commentServiceTarget" />
	</bean>
	
	<bean id="commentServiceTarget" class="com.pferrot.lendity.comment.CommentService">
		<property name="commentDao" ref="commentDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
		<property name="personService" ref="personService"/>
		<property name="itemService" ref="itemService"/>
		<property name="needService" ref="needService"/>
		<property name="lendTransactionService" ref="lendTransactionService"/>
		<property name="groupService" ref="groupService"/>
	</bean>	

	<!-- 
	COMMENT - end
	========================================================================================================================
	-->	 
	 
	<!-- 
	========================================================================================================================
	CONNECTION REQUEST - start
	 -->
	 
	<bean id="connectionRequestDaoTarget" class="com.pferrot.lendity.dao.hibernate.ConnectionRequestDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="connectionRequestDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="connectionRequestDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.ConnectionRequestDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	
	<bean id="connectionRequestService" parent="baseTransactionProxy">
		<property name="target" ref="connectionRequestServiceTarget" />
	</bean>
	
	<bean id="connectionRequestServiceTarget" class="com.pferrot.lendity.connectionrequest.ConnectionRequestService">
		<property name="connectionRequestDao" ref="connectionRequestDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="personDao" ref="personDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
		<property name="personService" ref="personService"/>
	</bean>

	<bean id="myPendingConnectionRequestsListController" class="com.pferrot.lendity.connectionrequest.jsf.MyPendingConnectionRequestsListController"
	      scope="session">
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="myPendingConnectionRequestsOutListController" class="com.pferrot.lendity.connectionrequest.jsf.MyPendingConnectionRequestsOutListController"
	      scope="session">
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="myConnectionsUpdatesListController" class="com.pferrot.lendity.connectionrequest.jsf.MyConnectionsUpdatesListController"
	      scope="session">
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="requestConnectionTooltipController" class="com.pferrot.lendity.connectionrequest.jsf.RequestConnectionTooltipController"
	      scope="request">
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>
	
	<bean id="acceptConnectionTooltipController" class="com.pferrot.lendity.connectionrequest.jsf.AcceptConnectionTooltipController"
	      scope="request">
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>
	
	<bean id="refuseConnectionTooltipController" class="com.pferrot.lendity.connectionrequest.jsf.RefuseConnectionTooltipController"
	      scope="request">
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>
	
	<bean id="banConnectionTooltipController" class="com.pferrot.lendity.connectionrequest.jsf.BanConnectionTooltipController"
	      scope="request">
	      <property name="connectionRequestService" ref="connectionRequestService"/>
	</bean>

	<!-- 
	CONNECTION REQUEST - end
	========================================================================================================================
	 -->
	 	 
	<!-- 
	========================================================================================================================
	ITEM - start
	 --> 
	 
	<bean id="itemDaoTarget" class="com.pferrot.lendity.dao.hibernate.ItemDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="itemDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="itemDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.ItemDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>	
		
	<bean id="itemService" parent="baseTransactionProxy">
		<property name="target" ref="itemServiceTarget" />
	</bean>
		
	<bean id="itemServiceTarget" class="com.pferrot.lendity.item.ItemService">
		<property name="itemDao" ref="itemDao"/>
		<property name="documentDao" ref="documentDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="lendRequestDao" ref="lendRequestDao"/>
		<property name="lendTransactionDao" ref="lendTransactionDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
		<property name="personService" ref="personService"/>
		<property name="documentService" ref="documentService"/>
		<property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="itemOverviewController" class="com.pferrot.lendity.item.jsf.ItemOverviewController"
	      scope="conversation.access">
	      <property name="itemService" ref="itemService"/>
	      <property name="documentService" ref="documentService"/>
	      <property name="lendRequestService" ref="lendRequestService"/>
	      <property name="lendTransactionService" ref="lendTransactionService"/>	 
	</bean>
	
	<bean id="itemAddController" class="com.pferrot.lendity.item.jsf.ItemAddController"
	      scope="conversation.access">
	      <property name="itemService" ref="itemService"/>
	      <property name="needService" ref="needService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="itemEditController" class="com.pferrot.lendity.item.jsf.ItemEditController"
	      scope="conversation.access">
	      <property name="itemService" ref="itemService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="itemEditPictureController" class="com.pferrot.lendity.item.jsf.ItemEditPictureController"
	      scope="conversation.access">
	      <property name="itemService" ref="itemService"/>
	      <property name="documentService" ref="documentService"/>
	</bean>
	
	<bean id="myItemsListController" class="com.pferrot.lendity.item.jsf.MyItemsListController"
	      scope="session">
	      <property name="itemService" ref="itemService"/>
	      <property name="lendTransactionService" ref="lendTransactionService"/>	      
	</bean>

	<bean id="searchItemsListController" class="com.pferrot.lendity.item.jsf.SearchItemsListController"
	      scope="session">
	      <property name="itemService" ref="itemService"/>
	      <property name="lendRequestService" ref="lendRequestService"/>
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	</bean>
	
	<bean id="personItemsListController" class="com.pferrot.lendity.item.jsf.PersonItemsListController"
	      scope="session">
	      <property name="itemService" ref="itemService"/>
	      <property name="lendRequestService" ref="lendRequestService"/>
	      <property name="personService" ref="personService"/>
	</bean>

	<bean id="itemLendTooltipController" class="com.pferrot.lendity.item.jsf.ItemLendTooltipController"
	      scope="request">
	      <property name="lendTransactionService" ref="lendTransactionService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="deleteItemTooltipController" class="com.pferrot.lendity.item.jsf.DeleteItemTooltipController"
	      scope="request">
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="itemsImportController" class="com.pferrot.lendity.item.jsf.ItemsImportController"
	      scope="conversation.access" orchestra:conversationName="itemsImport">
	      <property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="itemsImportStep1" class="com.pferrot.lendity.item.jsf.ItemsImportStep1"
	      scope="request">
		<property name="itemsImportController" ref="itemsImportController"/>
		<property name="itemService" ref="itemService"/>
	</bean>
	
	<bean id="itemsImportStep2" class="com.pferrot.lendity.item.jsf.ItemsImportStep2"
	      scope="request">
		<property name="itemsImportController" ref="itemsImportController"/>
	</bean>
	
	<bean id="itemsImportStep3" class="com.pferrot.lendity.item.jsf.ItemsImportStep3"
	      scope="request">
		<property name="itemsImportController" ref="itemsImportController"/>
	</bean>
	
	<bean id="shortcutSearchController" class="com.pferrot.lendity.item.jsf.ShortcutSearchController"
	      scope="request">
	</bean>
	

	<!-- 
	ITEM - end
	========================================================================================================================
	 -->


	<!-- 
	========================================================================================================================
	NEED - start
	 --> 
	 
	<bean id="needDaoTarget" class="com.pferrot.lendity.dao.hibernate.NeedDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="needDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="needDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.NeedDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>	
		
	<bean id="needService" parent="baseTransactionProxy">
		<property name="target" ref="needServiceTarget" />
	</bean>
		
	<bean id="needServiceTarget" class="com.pferrot.lendity.need.NeedService">
		<property name="needDao" ref="needDao"/>
		<property name="listValueDao" ref="listValueDao"/>
		<property name="mailManager" ref="emailSender.mailManager"/>
		<property name="personService" ref="personService"/>
		<property name="groupService" ref="groupService"/>
	</bean>
	
	<bean id="needOverviewController" class="com.pferrot.lendity.need.jsf.NeedOverviewController"
	      scope="conversation.access">
	      <property name="needService" ref="needService"/>
	</bean>
	
	<bean id="needAddController" class="com.pferrot.lendity.need.jsf.NeedAddController"
	      scope="conversation.access">
	      <property name="needService" ref="needService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="needEditController" class="com.pferrot.lendity.need.jsf.NeedEditController"
	      scope="conversation.access">
	      <property name="needService" ref="needService"/>
	      <property name="personService" ref="personService"/>
	</bean>
	
	<bean id="myNeedsListController" class="com.pferrot.lendity.need.jsf.MyNeedsListController"
	      scope="session">
	      <property name="needService" ref="needService"/>
	</bean>

	<bean id="searchNeedsListController" class="com.pferrot.lendity.need.jsf.SearchNeedsListController"
	      scope="session">
	      <property name="needService" ref="needService"/>
	</bean>

	<bean id="personNeedsListController" class="com.pferrot.lendity.need.jsf.PersonNeedsListController"
	      scope="session">
	      <property name="needService" ref="needService"/>
	      <property name="personService" ref="personService"/>
	</bean>

	<bean id="deleteNeedTooltipController" class="com.pferrot.lendity.need.jsf.DeleteNeedTooltipController"
	      scope="request">
	      <property name="needService" ref="needService"/>
	</bean>
	
	
	<!-- 
	NEED - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	DOCUMENT - start
	 -->

	<bean id="documentDaoTarget" class="com.pferrot.lendity.dao.hibernate.DocumentDaoHibernateImpl">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	
	<bean id="documentDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target">
			<ref local="documentDaoTarget"/>
		</property>
		<property name="proxyInterfaces">
           <value>com.pferrot.lendity.dao.DocumentDao</value>
         </property>		
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-java.lang.Throwable</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="documentService" parent="baseTransactionProxy">
		<property name="target" ref="documentServiceTarget" />
	</bean>
		
	<bean id="documentServiceTarget" class="com.pferrot.lendity.document.DocumentService">
		<property name="documentDao" ref="documentDao"/>
	</bean>
	
	<!-- 
	DOCUMENT - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	TO LEND EMAIL REMINDER JOB - start
	 -->

	<bean name="toLendEmailReminderJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.pferrot.lendity.jobs.tolendemailreminder.ToLendEmailReminderJob" />
<!--		<property name="jobDataAsMap">-->
<!--			<map>-->
<!--				<entry key="frequencyInDays" value="9" />-->
<!--			</map>-->
<!--		</property>		-->
	</bean>
	
	<bean id="toLendEmailReminderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="toLendEmailReminderJob" />
	    <!-- run every night at 1 AM -->
	    <property name="cronExpression" value="0 0 1 * * ?" />
		<!-- Every minute -->
<!--	    <property name="cronExpression" value="0 * * * * ?" />-->
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <ref bean="toLendEmailReminderCronTrigger" />
	        </list>
	    </property>
	    <property name="schedulerContextAsMap">
	      <map>
	      	 <entry key="hibernateSessionFactory">
	            <ref bean="sessionFactory"/>
	         </entry>
	         <entry key="mailManager">
	            <ref bean="emailSender.mailManager"/>
	         </entry>
	         <entry key="lendTransactionService">
	            <ref bean="lendTransactionService"/>
	         </entry>
	      </map>
	   </property>
	</bean>

	<!-- 
	TO LEND EMAIL REMINDER JOB - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	TO RETURN EMAIL REMINDER JOB - start
	 -->

	<bean name="toReturnEmailReminderJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.pferrot.lendity.jobs.toreturnemailreminder.ToReturnEmailReminderJob" />
<!--		<property name="jobDataAsMap">-->
<!--			<map>-->
<!--				<entry key="frequencyInDays" value="9" />-->
<!--			</map>-->
<!--		</property>		-->
	</bean>
	
	<bean id="toReturnEmailReminderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="toReturnEmailReminderJob" />
	    <!-- run every night at 2 AM -->
	    <property name="cronExpression" value="0 0 2 * * ?" />
		<!-- Every minute -->
<!--	    <property name="cronExpression" value="0 * * * * ?" />-->
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <ref bean="toReturnEmailReminderCronTrigger" />
	        </list>
	    </property>
	    <property name="schedulerContextAsMap">
	      <map>
	      	 <entry key="hibernateSessionFactory">
	            <ref bean="sessionFactory"/>
	         </entry>
	         <entry key="mailManager">
	            <ref bean="emailSender.mailManager"/>
	         </entry>
	         <entry key="lendTransactionService">
	            <ref bean="lendTransactionService"/>
	         </entry>
	      </map>
	   </property>
	</bean>

	<!-- 
	TO RETURN EMAIL REMINDER JOB - end
	========================================================================================================================
	 -->

	<!-- 
	========================================================================================================================
	EMAIL SUBSCRIBER - start
	 -->

	<bean name="emailSubscriberJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.pferrot.lendity.jobs.emailsubscriber.EmailSubscriberJob" />
		<property name="jobDataAsMap">
			<map>
				<entry key="frequencyInDays" value="9" />
			</map>
		</property>		
	</bean>
	
	<bean id="emailSubscriberCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="emailSubscriberJob" />
	    <!-- run every night at 3 AM -->
	    <property name="cronExpression" value="0 0 3 * * ?" />
		<!-- Every minute -->
<!--	    <property name="cronExpression" value="0 * * * * ?" />-->
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <ref bean="emailSubscriberCronTrigger" />
	        </list>
	    </property>
	    <property name="schedulerContextAsMap">
	      <map>
	      	 <entry key="hibernateSessionFactory">
	            <ref bean="sessionFactory"/>
	         </entry>
	         <entry key="mailManager">
	            <ref bean="emailSender.mailManager"/>
	         </entry>
	         <entry key="itemService">
	            <ref bean="itemService"/>
	         </entry>
	         <entry key="needService">
	            <ref bean="needService"/>
	         </entry>
	         <entry key="personService">
	            <ref bean="personService"/>
	         </entry>
	         <entry key="connectionRequestService">
	            <ref bean="connectionRequestService"/>
	         </entry>
	         <entry key="groupJoinRequestService">
	            <ref bean="groupJoinRequestService"/>
	         </entry>
	         <entry key="lendTransactionService">
	            <ref bean="lendTransactionService"/>
	         </entry>
	      </map>
	   </property>
	</bean>

	<!-- 
	EMAIL SUBSCRIBER - end
	========================================================================================================================
	 -->

	<!-- 
	Listener to store the current person ID in the session, so it avoids to always query the DB to retrieve it.
	 -->
<!--	<bean id="currentPersonListenerTarget" class="com.pferrot.lendity.person.listener.CurrentPersonLoginListener">-->
<!--    	<property name="personDao" ref="personDao"/>-->
<!--	</bean>	-->
<!--	<bean id="currentPersonListener" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">-->
<!--		<property name="transactionManager" ref="transactionManager"/>-->
<!--		<property name="target">-->
<!--			<ref local="currentPersonListenerTarget"/>-->
<!--		</property>-->
<!--		<property name="transactionAttributes">-->
<!--			<props>-->
<!--				<prop key="onApplicationEvent">PROPAGATION_REQUIRED</prop>-->
<!--				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>-->
<!--			</props>-->
<!--		</property>-->
<!--	</bean>-->
	
	<!-- 
	Orchestra stuff...
	 -->
	<import resource="classpath*:/META-INF/spring-orchestra-init.xml"/>
	
    <!-- register our custom spring scope -->
	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<property name="scopes">
			<map>
				<entry key="conversation.manual">
					<bean class="org.apache.myfaces.orchestra.conversation.spring.SpringConversationScope">
						<property name="timeout" value="30" />
						<property name="advices">
							<list>
								<ref bean="persistentContextConversationInterceptor" />
							</list>
						</property>
						<property name="lifetime" value="manual" />
					</bean>
				</entry>			
				<entry key="conversation.access">
					<bean class="org.apache.myfaces.orchestra.conversation.spring.SpringConversationScope">
						<property name="timeout" value="30" />
						<property name="advices">
							<list>
								<ref bean="persistentContextConversationInterceptor" />
							</list>
						</property>
						<property name="lifetime" value="access" />
					</bean>
				</entry>
				<entry key="conversation.viewController">
					<bean class="org.apache.myfaces.orchestra.viewController.spring.SpringViewControllerScope">
						<property name="advices">
							<list>
								<ref bean="persistentContextConversationInterceptor" />
							</list>
						</property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>	
    
	<bean id="persistentContextConversationInterceptor" class="org.apache.myfaces.orchestra.conversation.spring.PersistenceContextConversationInterceptor">
		<property name="persistenceContextFactory" ref="persistentContextFactory" />
	</bean>    
    
    <!-- 
    <tx:annotation-driven/>
     -->
     
    <bean id="persistentContextFactory" class="com.pferrot.orchestra.hibernate.HibernatePersistenceContextFactory">
		<property name="entityManagerFactory" ref="sessionFactory"/>
    </bean>
    
<!--	<bean id="managedDataSource" class="org.apache.myfaces.orchestra.connectionManager.ConnectionManagerDataSource">-->
<!--    	<property name="dataSource" ref="dataSource"/>-->
<!--    </bean>    -->

	 
	
</beans>