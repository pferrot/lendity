<?xml version="1.0" encoding="UTF-8"?>
<!-- 
The main security configuration is in applicationContext-security.xml in the 
security module.
 -->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:orchestra="http://myfaces.apache.org/orchestra"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">

	<global-method-security secured-annotations="enabled">
		<!--
			AspectJ pointcut expression that locates our "post" method and
			applies security that way <protect-pointcut expression="execution(*
			bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
		-->
	</global-method-security>
	
	<http auto-config="false" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<!--
			Disable web URI authorization, as we're using
			<global-method-security> and have @Secured the services layer instead
			<intercept-url pattern="/listAccounts.html"
			access="IS_AUTHENTICATED_REMEMBERED" /> <intercept-url
			pattern="/post.html" access="ROLE_TELLER" />
		-->
		<!-- 
		<intercept-url pattern="/login.faces" filters="none" />
		<intercept-url pattern="/public/**" filters="none" />
		 -->
		<intercept-url pattern="/login.faces" access="ROLE_ANONYMOUS, ROLE_USER" />
		<intercept-url pattern="/public/**" access="ROLE_ANONYMOUS, ROLE_USER" />
		<intercept-url pattern="/admin/**" access="ROLE_ADMIN" />		
		<intercept-url pattern="/**" access="ROLE_USER" />
		<anonymous username="anonymous" granted-authority="ROLE_ANONYMOUS"/>
		<!--
			<intercept-url pattern="/secure/extreme/**"
			access="ROLE_SUPERVISOR"/>
		-->
		<!--
			<intercept-url pattern="/secure/**"
			access="IS_AUTHENTICATED_REMEMBERED" />
		-->
		<!--
			Uncomment to enable X509 client authentication support <x509 />
		-->

<!--         All of this is unnecessary if auto-config="true"-->
		<!-- 
		<form-login login-page="/login.jsp" 
			authentication-failure-url="/login.jsp?login_error=1"/>
		<logout logout-success-url="/index.jsp" />
		<anonymous />
		<http-basic />
		<logout />
 		-->
		<logout logout-success-url="/auth/home.faces" />
		<remember-me user-service-ref="security.customUserDetailsService"/>
		<!--
			Uncomment to limit the number of sessions a user can have
			<concurrent-session-control max-sessions="1"
			exception-if-maximum-exceeded="true"/>
		-->
	</http>
	
	<beans:bean id="loginController" class="com.pferrot.sharedcalendar.login.jsf.LoginController"
	      scope="request">
	</beans:bean>	

	<beans:bean id="authenticationController" class="com.pferrot.sharedcalendar.login.jsf.AuthenticationController">
	</beans:bean>	

	<beans:bean id="authenticationProcessingFilter"	class="com.pferrot.sharedcalendar.login.filter.CustomAuthenticationProcessingFilter">
		<custom-filter position="AUTHENTICATION_PROCESSING_FILTER" />
		<beans:property name="authenticationFailureUrl" value="/login.faces?loginFailed=true"/>
		<beans:property name="defaultTargetUrl" value="/auth/home.jsp" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="personDao" ref="personDao"/>
	</beans:bean>

	<beans:bean id="authenticationProcessingFilterEntryPoint"	class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
		<beans:property name="loginFormUrl" value="/login.faces" />
		<beans:property name="forceHttps" value="false" />
	</beans:bean>

	<authentication-manager alias="authenticationManager" />
	
</beans:beans>